
CREATE OR REPLACE FUNCTION MY_FUNC_EMP
(
    EMP_NO NUMBER
) RETURN EMP%ROWTYPE
IS 
    V_VAR EMP%ROWTYPE;
BEGIN
    SELECT * INTO V_VAR
    FROM EMP WHERE EMPNO=EMP_NO;
    RETURN V_VAR;--RETURNING THE VALUE 
END;

/* BUT I CAN'T USE IT WITH THE SELECT STATEMENT AS IT RETURN THE ROWTYPE RECORD*/
/*ALTERNATE APPROACH */

SELECT MY_FUNC_EMP(30).ENAME FROM DUAL ; --NOT A VALID DATA TYPE

DECLARE
     V_NEW_VAR EMP%ROWTYPE;
BEGIN
    V_NEW_VAR:=MY_FUNC_EMP(7839);
    DBMS_OUTPUT.PUT_LINE('EMPLOYEE NAME IS ' || V_NEW_VAR.ENAME);
END ;

/* ANOTHER APPROACH TO FETCH MULTIPLE QUERIES */

CREATE OR REPLACE FUNCTION MY_FUNC_EMP_CUR
(
    DEPT_NO NUMBER
) RETURN SYS_REFCURSOR
IS 
    MY_EMP SYS_REFCURSOR ;
BEGIN
    OPEN MY_EMP FOR SELECT * FROM EMP WHERE DEPTNO=DEPT_NO;
    RETURN MY_EMP ;
END;

DECLARE
    MY_EMP_NEW SYS_REFCURSOR ;
    V_ENAME EMP%ROWTYPE ;
BEGIN
    MY_EMP_NEW:=MY_FUNC_EMP_CUR(30);
    LOOP
        FETCH MY_EMP_NEW INTO V_ENAME ;
        EXIT WHEN MY_EMP_NEW%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(V_ENAME.ENAME);
    END LOOP ;
    CLOSE MY_EMP_NEW;
END ;

/*USING THE DYNAMIC SQL TO ACHIVE THE RESULT */

CREATE OR REPLACE FUNCTION MY_DYNAMIC_FUNC
(
    EMP_ID EMP.EMPNO%TYPE
) RETURN EMP%ROWTYPE
IS
    V_EMP_REC EMP%ROWTYPE ;
BEGIN
    EXECUTE IMMEDIATE 'SELECT * FROM EMP WHERE EMPNO=:EMPNO'
    INTO V_EMP_REC USING EMP_ID ;
    RETURN V_EMP_REC ;
END;

DECLARE
    V_EMP_REC_NEW EMP%ROWTYPE ;
BEGIN
    V_EMP_REC_NEW:=MY_DYNAMIC_FUNC(7839);
    DBMS_OUTPUT.PUT_LINE('ENAME OF THE EMPLOYEE IS ' || V_EMP_REC_NEW.ENAME );
END;


