DROP TYPE MY_OBJ

DROP TYPE MY_NEST_OBJ

CREATE OR REPLACE TYPE MY_OBJ IS OBJECT(
    ENO NUMBER,
    ENAME VARCHAR2(50),
    SAL NUMBER(7,2)
);

DESC EMP;

CREATE OR REPLACE TYPE MY_NEST_OBJ IS TABLE OF MY_OBJ ;

CREATE OR REPLACE FUNCTION TBL_FUNC
RETURN MY_NEST_OBJ
IS
    V_VAR MY_NEST_OBJ:=MY_NEST_OBJ();--DESCRIBING AND INITIALIZING THE COLLECTION TYPE VARIABLE 
BEGIN
    FOR I IN (SELECT EMPNO,ENAME,SAL FROM EMP )
    LOOP
        V_VAR.EXTEND;
        V_VAR(V_VAR.LAST):=MY_OBJ(I.EMPNO,I.ENAME,I.SAL);
    END LOOP ;
    DBMS_OUTPUT.PUT_LINE('TABLE FUNCTION CREATED SUCCESSFULLY');
    RETURN V_VAR ;
END ;


SELECT * FROM 
TABLE(TBL_FUNC())
OFFSET 1 ROW FETCH NEXT 5 ROWS ONLY;

SELECT * FROM 
TABLE(TBL_FUNC())
OFFSET 5 ROW FETCH NEXT 5 ROWS ONLY;


SELECT * FROM 
TABLE(TBL_FUNC())
OFFSET 10 ROW FETCH NEXT 5 ROWS ONLY;


/*USING THE PARTITIONED BY CLAUSE FOR THE SAME PURPOSE AS */

CREATE OR REPLACE FUNCTION PIPE_FUNC
RETURN MY_NEST_OBJ
PIPELINED
IS
    V_VAR MY_NEST_OBJ:=MY_NEST_OBJ();--INITIALIZING AND DECLARING THE COLLECTION 
BEGIN
    FOR I IN (SELECT EMPNO,ENAME,SAL FROM EMP )
    LOOP
        PIPE ROW (MY_OBJ(I.EMPNO,I.ENAME,I.SAL));
    END LOOP;
    RETURN ;
END;


SELECT * FROM
PIPE_FUNC()
OFFSET 1 ROW FETCH NEXT 5 ROW ONLY ;


SELECT * FROM
PIPE_FUNC()
OFFSET 5 ROW FETCH NEXT 5 ROW ONLY ;


SELECT * FROM
PIPE_FUNC()
OFFSET 10 ROW FETCH NEXT 5 ROW ONLY ;